{
  "quizzes": [
    {
      "id": 1,
      "category": "html",
      "point": 1000,
      "second": 30,
      "question": "다음 중 HTML 전역 속성이 아닌 것은?",
      "content": "",
      "options": {
        "a": "class",
        "b": "id",
        "c": "style",
        "d": "value"
      },
      "hasMultipleAnswers": false,
      "answer": "d",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 2,
      "category": "css",
      "point": 1000,
      "second": 30,
      "question": "CSS flex 속성 사용시 주축을 기준으로 요소를 정렬하는 속성은?",
      "content": "",
      "options": {
        "a": "flex-wrap",
        "b": "align-items",
        "c": "justify-content",
        "d": "align-content"
      },
      "hasMultipleAnswers": false,
      "answer": "c",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 3,
      "category": "javascript",
      "point": 1000,
      "second": 30,
      "question": "아래 코드의 실행 결과로 알맞은 것은?",
      "content": "const foo = 1 + undefined;\r\nconsole.log(foo);",
      "options": {
        "a": "NaN",
        "b": "undefined",
        "c": "Infinity",
        "d": "1"
      },
      "hasMultipleAnswers": false,
      "answer": "a",
      "hasCode": true,
      "selected": false
    },
    {
      "id": 4,
      "category": "css",
      "point": 1000,
      "second": 30,
      "question": "다음 중 flex 컨테이너의 justify-content 속성 값으로 맞지 않는 것은?",
      "content": "",
      "options": {
        "a": "space-between",
        "b": "flex-end",
        "c": "top",
        "d": "center",
        "e": "stretch"
      },
      "hasMultipleAnswers": false,
      "answer": "c",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 5,
      "category": "css",
      "point": 1000,
      "second": 30,
      "question": "다음 중 CSS 방법론이 아닌 것은?",
      "content": "",
      "options": {
        "a": "SMACSS",
        "b": "BEM",
        "c": "OOCSS",
        "d": "SCSS"
      },
      "hasMultipleAnswers": false,
      "answer": "d",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 6,
      "category": "css",
      "point": 2500,
      "second": 45,
      "question": "아래 CSS 코드를 단축 표기법으로 작성한 예제 중 옳지 않은 것은?",
      "content": "h1 {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 5px;\n  margin-left: 5px;\n}\n",
      "options": {
        "a": "h1 { margin: 10px 5px;  }",
        "b": "h1 { margin: 5px 10px; }",
        "c": "h1 { margin: 10px 5px 10px; }",
        "d": "h1 { margin: 10px 5px 10px 5px; }"
      },
      "hasMultipleAnswers": false,
      "answer": "b",
      "hasCode": true,
      "selected": false
    },
    {
      "id": 7,
      "category": "css",
      "point": 1000,
      "second": 30,
      "question": "다음 중 CSS font 단위가 아닌 것은?",
      "content": "",
      "options": {
        "a": "px",
        "b": "rem",
        "c": "em",
        "d": "%",
        "e": "wh"
      },
      "hasMultipleAnswers": false,
      "answer": "a",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 8,
      "category": "css",
      "point": 2500,
      "second": 90,
      "question": "아래 보기 중 CSS position 속성에 대한 설명으로 알맞은 것은?",
      "content": "",
      "options": {
        "a": "position: absolute 속성 사용시 offset을 주지 않으면 position: absolute 속성이 적용되지 않는다.",
        "b": "position: absolute 속성을 적용한 요소의 위치를 offset으로 설정할 때, offset 기준점은 상위에서 가장 가까운 position: relative 속성을 가진 요소이다.",
        "c": "position: absolute 속성을 가진 요소의 기본 display 스타일은 block이다.",
        "d": "position: relative 속성은 offset 속성과 함께 사용할 수 없다."
      },
      "hasMultipleAnswers": false,
      "answer": "c",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 9,
      "category": "html",
      "point": 1000,
      "second": 30,
      "question": "아래 HTML 마크업의 label 요소를 input 요소에 연결 할 때 필요한 속성은?",
      "content": "<label>이름</label>\n<input type=\"text\" id=\"name\" />",
      "options": {
        "a": "to=&quot;name&quot;",
        "b": "of=&quot;name&quot;",
        "c": "on=&quot;name&quot;",
        "d": "for=&quot;name&quot;",
        "e": "by=&quot;name&quot;"
      },
      "hasMultipleAnswers": false,
      "answer": "d",
      "hasCode": true,
      "selected": false
    },
    {
      "id": 10,
      "category": "html",
      "point": 1000,
      "second": 30,
      "question": "&lt;input&gt; 요소의 type으로 옳지 않은 것은?",
      "content": "",
      "options": {
        "a": "text",
        "b": "checkbox",
        "c": "menu",
        "d": "radio",
        "e": "search"
      },
      "hasMultipleAnswers": false,
      "answer": "c",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 11,
      "category": "html",
      "point": 1000,
      "second": 30,
      "question": "다음 중 &lt;form&gt; 요소에 대한 설명으로 옳지 않은 것은?",
      "content": "",
      "options": {
        "a": "block 요소이다.",
        "b": "자식 요소로 또 다른 &lt;form&gt; 요소를 포함할 수 있다.",
        "c": "웹 서버에 정보를 제출하기 위한 양식 범위를 정의할 때 사용한다.",
        "d": "autocomplete 속성을 통해 사용자가 이전에 입력한 값으로 자동 완성 기능을 구현할 수 있다."
      },
      "hasMultipleAnswers": false,
      "answer": "a",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 12,
      "category": "css",
      "point": 1000,
      "second": 30,
      "question": "다음 중 CSS vertical-align 속성을 사용할 수 없는 요소는?",
      "content": "",
      "options": {
        "a": "inline",
        "b": "inline-block",
        "c": "table-cell",
        "d": "block"
      },
      "hasMultipleAnswers": false,
      "answer": "d",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 13,
      "category": "html",
      "point": 1000,
      "second": 30,
      "question": "&lt;a&gt; 요소를 사용하여 새로운 창에 페이지를 표시하려합니다. 이때 target 속성의 값으로 알맞은 것은?",
      "content": "",
      "options": {
        "a": "_self",
        "b": "_blank",
        "c": "_top",
        "d": "_parent",
        "e": "_new"
      },
      "hasMultipleAnswers": false,
      "answer": "b",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 14,
      "category": "css",
      "point": 1000,
      "second": 30,
      "question": "다음 중 반응형 웹디자인과 거리가 먼 CSS 단위를 선택해주세요.",
      "content": "",
      "options": {
        "a": "%",
        "b": "px",
        "c": "vw",
        "d": "vh",
        "e": "em"
      },
      "hasMultipleAnswers": false,
      "answer": "b",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 15,
      "category": "html",
      "point": 1000,
      "second": 30,
      "question": "아래 HTML 코드에서 사용된 클래스 네이밍 컨벤션으로 알맞은 것은?",
      "content": "<button class=\"buttonNone buttonBurger\">...</button>",
      "options": {
        "a": "Camel case",
        "b": "Kebab case",
        "c": "Snake case",
        "d": "Hungarian notation"
      },
      "hasMultipleAnswers": false,
      "answer": "a",
      "hasCode": true,
      "selected": false
    },
    {
      "id": 16,
      "category": "html",
      "point": 2500,
      "second": 45,
      "question": "ARIA 랜드마크의 역할(role)은 스크린 리더와 같은 보조기술 사용자가 웹페이지의 구조를 명확히 식별하기 위해 사용될 수 있습니다. 다음 중 랜드마크 역할의 유형으로 알맞지 않은 것은 무엇인가요?",
      "content": "",
      "options": {
        "a": "main",
        "b": "navigation",
        "c": "search",
        "d": "contentinfo",
        "e": "aside"
      },
      "hasMultipleAnswers": false,
      "answer": "e",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 17,
      "category": "javascript",
      "point": 1000,
      "second": 60,
      "question": "다음 중 식별자에 대한 설명으로 옳지 않은 것은?",
      "content": "",
      "options": {
        "a": "식별자는 어떤 값을 구별하여 식별해낼 수 있는 고유한 이름을 말한다.",
        "b": "식별자는 값이 아니라 메모리 주소를 기억하고 있다.",
        "c": "식별자는 키워드로 분류된다.",
        "d": "식별자라는 용어는 변수 이름 뿐만 아니라 함수, 클래스 등의 이름을 지칭하는 단어이다.",
        "e": "식별자 네이밍 규칙으로는 camel case, snake case, pascal case 등 다양한 컨벤션이 존재한다."
      },
      "hasMultipleAnswers": false,
      "answer": "c",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 18,
      "category": "javascript",
      "point": 2500,
      "second": 60,
      "question": "다음 중 값과 표현식에 대해 옳지 않은 것은?",
      "content": "",
      "options": {
        "a": "값은 식이 평가되어 생성된 결과이다.",
        "b": "값은 다양한 방법으로 생성할 수 있으며, 가장 기본적인 방법은 리터럴을 사용하는 것이다.",
        "c": "리터럴은 그 자체로 표현식이다.",
        "d": "자바스크립트 엔진은 런타임 이전에 표현식을 평가하여 값을 생성한다.",
        "e": "값으로 평가되는 문은 모두 표현식이다."
      },
      "hasMultipleAnswers": false,
      "answer": "d",
      "hasCode": false,
      "selected": false
    },
    {
      "id": 19,
      "category": "javascript",
      "point": 2500,
      "second": 45,
      "question": "일부 연산자는 다른 코드에 영향을 주는 부수 효과(side effect)가 있다. 다음 보기 중 부수 효과를 가지는 연산자는?",
      "content": "",
      "options": {
        "a": "typeof",
        "b": "&amp;&amp;",
        "c": "++",
        "d": "=",
        "e": "!"
      },
      "hasMultipleAnswers": true,
      "answer": [
        "c",
        "d"
      ],
      "hasCode": false,
      "selected": false
    },
    {
      "id": 20,
      "question": "자바스크립트 엔진은 불리언 타입이 아닌 값을 truthy 값 또는 falsy 값으로 구분한다. 다음 보기 중 falsy 값이 아닌 것은?",
      "selected": false,
      "category": "javascript",
      "point": 1000,
      "second": 30,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "undefined",
        "b": "null",
        "c": "-Infinity",
        "d": "NaN",
        "e": "&#x27;&#x27; (빈 문자열)"
      },
      "answer": "c",
      "hasMultipleAnswers": false
    },
    {
      "id": 21,
      "question": "다음 보기 중 객체의 프로퍼티에 대한 설명으로 옳지 않은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 90,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "프로퍼티를 나열할 때는 쉼표(,)로 구분한다.",
        "b": "마지막 프로퍼티 뒤에는 쉼표를 사용할 수 없다.",
        "c": "예약어를 프로퍼티 키로 사용해도 에러가 발생하지 않는다.",
        "d": "이미 존재하는 프로퍼티 키를 중복 선언하면 나중에 선언한 프로퍼티가 무시된다.",
        "e": "식별자 네이밍 규칙을 준수하는 프로퍼티 키 이름은 따옴표를 생략할 수 있다."
      },
      "answer": [
        "b",
        "d"
      ],
      "hasMultipleAnswers": true
    },
    {
      "id": 22,
      "question": "아래 코드의 실행 결과로 알맞은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 60,
      "hasCode": true,
      "content": "var obj = {\n  1: 'foo',\n  foo: 1,\n  bar: 'bar',\n  2: 1\n};\n\nvar string = obj[1];\n\nconsole.log(obj[string]);",
      "options": {
        "a": "undefined",
        "b": "foo",
        "c": "bar",
        "d": "1",
        "e": "ReferenceError"
      },
      "answer": "d",
      "hasMultipleAnswers": false
    },
    {
      "id": 23,
      "question": "아래 코드의 실행 결과로 알맞은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 1000,
      "second": 30,
      "hasCode": true,
      "content": "var a = {\n  name: 'Kim',\n  address: 'Seoul'\n};\n\nvar b = {\n  name: 'Kim',\n  address: 'Seoul'\n};\n\nconsole.log(a === b);",
      "options": {
        "a": "true",
        "b": "false"
      },
      "answer": "b",
      "hasMultipleAnswers": false
    },
    {
      "id": 24,
      "question": "다음 중 함수에 대한 설명으로 알맞지 않은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 1000,
      "second": 60,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "함수는 함수 이름으로 호출하는 것이 아니라 함수 객체를 가리키는 식별자로 호출한다.",
        "b": "함수 정의 방법으로는 함수 선언문, 함수 표현식, Function 생성자 함수, 화살표 함수가 있다.",
        "c": "함수는 객체이며 호출 할 수 있으므로, 모든 객체는 호출 할 수 있다.",
        "d": "함수는 일련의 과정을 문으로 구현하고 코드 블록으로 감싸서 하나의 실행 단위로 정의한 것이다.",
        "e": "함수 이름은 함수 몸체 내에서만 참조할 수 있는 식별자다."
      },
      "answer": "c",
      "hasMultipleAnswers": false
    },
    {
      "id": 25,
      "question": "아래 표현식이 평가된 값으로 알맞은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 30,
      "hasCode": true,
      "content": "'1' + 2 * '3' / 4",
      "options": {
        "a": "9",
        "b": "&#x27;4&#x27;",
        "c": "&#x27;11.5&#x27;",
        "d": "NaN"
      },
      "answer": "c",
      "hasMultipleAnswers": false
    },
    {
      "id": 26,
      "question": "아래 코드의 실행 결과로 알맞은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 45,
      "hasCode": true,
      "content": "function Circle(radius) {\n  this.radius = radius;\n  this.getDiameter = function () {\n    return this.radius * 2;\n  };\n}\n\nconst circle = Circle(5);\nconsole.log(circle);",
      "options": {
        "a": "undefined",
        "b": "Circle { radius: 5, getDiameter: f }"
      },
      "answer": "a",
      "hasMultipleAnswers": false
    },
    {
      "id": 27,
      "question": "아래 문제를 읽고 알맞은 답을 선택해주세요.",
      "selected": false,
      "category": "javascript",
      "point": 5000,
      "second": 60,
      "hasCode": false,
      "content": "함수 내부의 this 키워드가 가리키는 값은 함수 호출 방식에 따라 동적으로 결정됩니다. 아래 3가지 함수 호출 방식에 따라 함수 내부의 this가 가리키는 값을 알맞게 나열한 보기를 선택해주세요. (strict mode 제외)\n\n\n일반 함수로 호출 / 메소드로 호출 / 생성자 함수를 new 키워드와 함께 호출",
      "options": {
        "a": "전역 객체 / 메소드가 바인딩되어 있는 객체 / undefined",
        "b": "undefined / 메소드를 호출한 객체 / 미래에 생성될 인스턴스",
        "c": "전역 객체 / 메소드를 호출한 객체 / 미래에 생성될 인스턴스"
      },
      "answer": "c",
      "hasMultipleAnswers": false
    },
    {
      "id": 28,
      "question": "다음 constructor와 non-constructor에 관한 설명 중 알맞지 않은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 60,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "자바스크립트에서는 함수가 어디에 할당되어 있는지에 따라 메소드인지를 판단한다.",
        "b": "함수 선언문과 함수 표현식으로 정의한 함수만이 constructor이다.",
        "c": "함수를 일반 함수로서 호출하면 함수 객체의 내부 메소드 [[Call]]이 호출된다.",
        "d": "non-constructor인 함수 객체를 생성자 함수로서 호출하면 에러가 발생한다.",
        "e": "메소드 축약 표현으로 정의한 함수도 new 연산자와 함께 호출하면 constructor로서 동작한다."
      },
      "answer": [
        "a",
        "e"
      ],
      "hasMultipleAnswers": true
    },
    {
      "id": 29,
      "question": "&lt;img&gt; 요소 사용시 필수적으로 작성해야하는 속성을 모두 선택하세요.",
      "selected": false,
      "category": "html",
      "point": 1000,
      "second": 30,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "value",
        "b": "src",
        "c": "namer",
        "d": "srcset",
        "e": "alt"
      },
      "answer": [
        "b",
        "e"
      ],
      "hasMultipleAnswers": true
    },
    {
      "id": 30,
      "question": "일급 객체가 되기 위한 조건 네 가지 중 알맞지 않은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 45,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "변수나 자료 구조(객체, 배열 등)에 저장할 수 있다.",
        "b": "함수의 매개 변수에게 전달할 수 있다.",
        "c": "전역 객체의 프로퍼티이다.",
        "d": "무명의 리터럴로 생성할 수 있다.",
        "e": "함수의 결과값으로 반환할 수 있다."
      },
      "answer": "c",
      "hasMultipleAnswers": false
    },
    {
      "id": 31,
      "question": "아래 보기 중 함수 객체에 대한 설명으로 알맞지 않은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 5000,
      "second": 60,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "함수 객체의 length 프로퍼티는 함수 정의 시 선언한 매개변수의 개수를 가리킨다.",
        "b": "함수 객체만  __proto__ 접근자 프로퍼티를 가진다.",
        "c": "함수 객체의 prototype 프로퍼티 값과 __proto__ 접근자 프로퍼티가 반환하는 값은 같다.",
        "d": "함수 객체의 arguments 프로퍼티 값을 사용하여 가변인자 함수를 작성할 수 있다.",
        "e": "함수 객체의 name 프로퍼티는 함수 이름을 나타낸다."
      },
      "answer": [
        "b",
        "c"
      ],
      "hasMultipleAnswers": true
    },
    {
      "id": 32,
      "question": "아래 코드의 실행 결과는 무엇인가요?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 60,
      "hasCode": true,
      "content": "const Person = (function () {\n  function Person(name) {\n    this.name = name;\n  }\n\n  Person.prototype.sayHi = function () {\n    console.log(`Hi! My name is ${this.name}.`);\n  };\n\n  return Person;\n}());\n\nconst person = new Person('Kim');\n\nperson.sayHi = function () {\n  console.log(`Hey! My name is ${this.name}.`);\n};\n\nperson.sayHi();\n",
      "options": {
        "a": "Hi! My name is Lee",
        "c": "Hey! My name is Lee"
      },
      "answer": "a",
      "hasMultipleAnswers": false
    },
    {
      "id": 33,
      "question": "아래 코드의 실행결과는 무엇인가요?",
      "selected": false,
      "category": "javascript",
      "point": 1000,
      "second": 30,
      "hasCode": true,
      "content": "const str1 = new String('Kim');\nconst str2 = 'Kim';\n\nconsole.log(typeof str1 === typeof str2);\n",
      "options": {
        "a": "true",
        "b": "false"
      },
      "answer": "b",
      "hasMultipleAnswers": false
    },
    {
      "id": 34,
      "question": "아래 코드의 실행결과로 알맞은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 2500,
      "second": 60,
      "hasCode": true,
      "content": "const person = {\n  name: 'Kim',\n  sayHi() {\n    return `Hi! My name is ${this.name}`;\n  }\n};\n\nconst anotherPerson = {\n  name: 'Park'\n};\n\nanotherPerson.sayHi = person.sayHi;\n\nconsole.log(anotherPerson.sayHi());\n",
      "options": {
        "a": "Hi! My name is Kim",
        "b": "Hi! My name is Park"
      },
      "answer": "b",
      "hasMultipleAnswers": false
    },
    {
      "id": 35,
      "question": "다음 브라우저 환경에서의 자바스크립트 파싱과 실행에 대한 설명으로 옳지 않은 것은?",
      "selected": false,
      "category": "javascript",
      "point": 5000,
      "second": 60,
      "hasCode": false,
      "content": "",
      "options": {
        "a": "자바스크립트 파싱과 실행은 렌더링 엔진이 아닌 자바스크립트 엔진이 처리한다.",
        "b": "자바스크립트 엔진은 자바스크립트 코드를 CPU가 이해할 수 있는 저수준 언어로 변환하는 역할을 한다.",
        "c": "파싱(parsing)은 단순한 문자열인 소스 코드를 어휘 분석하여 문법적 의미를 가지는 코드의 최소 단위인 토큰으로 분해하는 과정을 말한다.",
        "d": "AST(Abstract Syntax Tree)는 토큰에 문법적 의미와 구조를 반영한 트리 구조의 자료 구조이다."
      },
      "answer": "c",
      "hasMultipleAnswers": false
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "smilejin92",
      "point": 5000
    }
  ]
}